[{"/front/src/index.js":"1","/front/src/App.js":"2","/front/src/components/ScrollToTopOnMount.js":"3","/front/src/components/Notification.js":"4","/front/src/components/About.js":"5","/front/src/components/Trend.js":"6","/front/src/components/Test.js":"7","/front/src/components/All.js":"8","/front/src/components/Feed.js":"9","/front/src/components/Login.js":"10","/front/src/components/DirectMessage.js":"11","/front/src/components/PrivateRoute.js":"12","/front/src/components/User.js":"13","/front/src/components/Bookmark.js":"14","/front/src/contexts/AppContext.js":"15","/front/src/reducers/index.js":"16","/front/src/components/CropImage.js":"17","/front/src/components/UserImage.js":"18","/front/src/components/DmNewUser.js":"19","/front/src/components/Posts.js":"20","/front/src/components/Navbar.js":"21","/front/src/components/FollowList.js":"22","/front/src/components/ProfileEdit.js":"23","/front/src/components/FollowBtn.js":"24","/front/src/reducers/users.js":"25","/front/src/reducers/currentUser.js":"26","/front/src/reducers/notification.js":"27","/front/src/reducers/login.js":"28","/front/src/reducers/posts.js":"29","/front/src/reducers/loading.js":"30","/front/src/actions/index.js":"31","/front/src/components/Post.js":"32","/front/src/components/ListUser.js":"33","/front/src/components/TweetBtn.js":"34","/front/src/components/UploadS3.js":"35","/front/src/components/AddImage.js":"36","/front/src/components/ShowPost.js":"37"},{"size":197,"mtime":1606284292570,"results":"38","hashOfConfig":"39"},{"size":2706,"mtime":1608105290272,"results":"40","hashOfConfig":"39"},{"size":356,"mtime":1606284292593,"results":"41","hashOfConfig":"39"},{"size":843,"mtime":1606284292588,"results":"42","hashOfConfig":"39"},{"size":180,"mtime":1606915498390,"results":"43","hashOfConfig":"39"},{"size":3275,"mtime":1606284292588,"results":"44","hashOfConfig":"39"},{"size":8919,"mtime":1606915498391,"results":"45","hashOfConfig":"39"},{"size":699,"mtime":1606284292591,"results":"46","hashOfConfig":"39"},{"size":784,"mtime":1606284292590,"results":"47","hashOfConfig":"39"},{"size":8902,"mtime":1608283485087,"results":"48","hashOfConfig":"39"},{"size":8211,"mtime":1606284292595,"results":"49","hashOfConfig":"39"},{"size":1424,"mtime":1606284292599,"results":"50","hashOfConfig":"39"},{"size":4681,"mtime":1606284292594,"results":"51","hashOfConfig":"39"},{"size":806,"mtime":1606284292600,"results":"52","hashOfConfig":"39"},{"size":104,"mtime":1606284292562,"results":"53","hashOfConfig":"39"},{"size":353,"mtime":1606284292607,"results":"54","hashOfConfig":"39"},{"size":3372,"mtime":1606284292589,"results":"55","hashOfConfig":"39"},{"size":387,"mtime":1608283485090,"results":"56","hashOfConfig":"39"},{"size":3737,"mtime":1606284292590,"results":"57","hashOfConfig":"39"},{"size":1619,"mtime":1606284292592,"results":"58","hashOfConfig":"39"},{"size":5427,"mtime":1608106605372,"results":"59","hashOfConfig":"39"},{"size":1510,"mtime":1606284292601,"results":"60","hashOfConfig":"39"},{"size":5551,"mtime":1606284292600,"results":"61","hashOfConfig":"39"},{"size":1332,"mtime":1606284292602,"results":"62","hashOfConfig":"39"},{"size":283,"mtime":1606284292607,"results":"63","hashOfConfig":"39"},{"size":221,"mtime":1606284292606,"results":"64","hashOfConfig":"39"},{"size":473,"mtime":1606284292605,"results":"65","hashOfConfig":"39"},{"size":1062,"mtime":1606284292608,"results":"66","hashOfConfig":"39"},{"size":479,"mtime":1606284292606,"results":"67","hashOfConfig":"39"},{"size":277,"mtime":1606284292606,"results":"68","hashOfConfig":"39"},{"size":865,"mtime":1606284292603,"results":"69","hashOfConfig":"39"},{"size":9328,"mtime":1608283485088,"results":"70","hashOfConfig":"39"},{"size":2101,"mtime":1606284292599,"results":"71","hashOfConfig":"39"},{"size":4288,"mtime":1614931888787,"results":"72","hashOfConfig":"39"},{"size":2127,"mtime":1606284292597,"results":"73","hashOfConfig":"39"},{"size":1697,"mtime":1606284292587,"results":"74","hashOfConfig":"39"},{"size":4747,"mtime":1608283485089,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"hd1g1g",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},"/front/src/index.js",[],["155","156"],"/front/src/App.js",[],"/front/src/components/ScrollToTopOnMount.js",[],"/front/src/components/Notification.js",[],"/front/src/components/About.js",[],"/front/src/components/Trend.js",[],"/front/src/components/Test.js",[],"/front/src/components/All.js",[],"/front/src/components/Feed.js",[],"/front/src/components/Login.js",[],"/front/src/components/DirectMessage.js",[],"/front/src/components/PrivateRoute.js",[],"/front/src/components/User.js",[],"/front/src/components/Bookmark.js",[],"/front/src/contexts/AppContext.js",[],"/front/src/reducers/index.js",[],"/front/src/components/CropImage.js",["157"],"import React, {\n  useState,\n  useCallback,\n  useRef,\n  useEffect,\n  useContext,\n} from \"react\";\nimport AppContext from \"../contexts/AppContext\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\n\nimport { START_ALERT } from \"../actions\";\n\nconst sizeLimit = 1024 * 1024 * 100; // 制限サイズ\n\nexport default function CropImage({\n  setEncodedData,\n  setExt,\n  circular = false,\n}) {\n  const { dispatch } = useContext(AppContext);\n  const previewCanvasRef = useRef(null);\n  const [upImg, setUpImg] = useState();\n  const imgRef = useRef(null);\n  const [crop, setCrop] = useState({\n    unit: \"%\",\n    width: 30,\n    aspect: circular ? 1 : 3 / 2,\n  });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  const onSelectFile = (e) => {\n    if (e.target.files[0].size > sizeLimit) {\n      dispatch({\n        type: START_ALERT,\n        data: {\n          message: \"ファイルサイズは100MB以下にしてください\",\n          severity: \"error\",\n        },\n      });\n      return; // この時点で処理を終了する\n    }\n    if (e.target.files && e.target.files.length > 0) {\n      var pos = e.target.files[0].name.lastIndexOf(\".\");\n      setExt(e.target.files[0].name.slice(pos));\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  useEffect(() => {\n    if (!completedCrop || !imgRef.current) {\n      return;\n    }\n\n    const image = imgRef.current;\n    const canvas = document.createElement(\"canvas\");\n    const crop = completedCrop;\n\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n\n    var originWidth = crop.width * scaleX;\n    var originHeight = crop.height * scaleY;\n    // maximum width/height\n    var maxWidth = 1200,\n      maxHeight = 1200 / (3 / 2);\n    var targetWidth = originWidth,\n      targetHeight = originHeight;\n    if (originWidth > maxWidth || originHeight > maxHeight) {\n      if (originWidth / originHeight > maxWidth / maxHeight) {\n        targetWidth = maxWidth;\n        targetHeight = Math.round(maxWidth * (originHeight / originWidth));\n      } else {\n        targetHeight = maxHeight;\n        targetWidth = Math.round(maxHeight * (originWidth / originHeight));\n      }\n    }\n    // set canvas size\n    canvas.width = targetWidth;\n    canvas.height = targetHeight;\n\n    const ctx = canvas.getContext(\"2d\");\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      targetWidth,\n      targetHeight\n    );\n\n    const contentType = image.src.split(\";\")[0].split(\":\")[1];\n    setEncodedData(canvas.toDataURL(contentType));\n  }, [completedCrop, setEncodedData]);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          style={{ display: \"none\" }}\n          id=\"icon-button-file\"\n          onChange={onSelectFile}\n        />\n      </div>\n\n      <ReactCrop\n        src={upImg}\n        onImageLoaded={onLoad}\n        crop={crop}\n        circularCrop={circular}\n        onChange={(c) => setCrop(c)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n    </div>\n  );\n}\n","/front/src/components/UserImage.js",[],"/front/src/components/DmNewUser.js",[],"/front/src/components/Posts.js",[],"/front/src/components/Navbar.js",[],"/front/src/components/FollowList.js",[],"/front/src/components/ProfileEdit.js",["158"],"import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppContext from \"../contexts/AppContext\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\n\nimport AddImage from \"./AddImage\";\nimport UploadS3 from \"./UploadS3\";\nimport CropImage from \"./CropImage\";\nimport { TOKEN_KEY, CURRENT_USER, START_ALERT } from \"../actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: 500, // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  large: {\n    width: theme.spacing(16),\n    height: theme.spacing(16),\n  },\n  logout: {\n    marginLeft: 15,\n    color: \"#ff5e5e\",\n    border: \"1px solid #ff5e5e\",\n  },\n}));\n\nexport default function ProfileEdit() {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(AppContext);\n\n  const [open, setOpen] = React.useState(false);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [encodedData, setEncodedData] = useState(\"\");\n  const [ext, setExt] = useState(\"\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    setName(state.currentUser.name);\n    setEmail(state.currentUser.email);\n    setImage(state.currentUser.image);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const logout = async () => {\n    localStorage.removeItem(TOKEN_KEY);\n    window.location.href = \"/login\";\n  };\n\n  const editSubmit = async (event) => {\n    event.preventDefault();\n    const params = { name: name, email: email };\n\n    if (encodedData !== \"\") {\n      const file = {\n        dir: \"user-image/\",\n        id: state.currentUser.id,\n      };\n      const url = await UploadS3(encodedData, ext, file);\n      params[\"image\"] = url;\n      console.log(url);\n    }\n    await axios\n      .put(`${process.env.REACT_APP_API_URL}/auth`, params, {\n        headers: JSON.parse(localStorage.getItem(TOKEN_KEY)),\n      })\n      .then((res) => {\n        dispatch({ type: CURRENT_USER, data: res.data.data });\n        window.location.reload();\n      })\n      .catch((err) => {\n        console.log(\"err:\", err);\n        dispatch({\n          type: START_ALERT,\n          data: { message: \"編集に失敗しました\", severity: \"error\" },\n        });\n      });\n  };\n\n  const unCreatable =\n    name === \"\" || name.length > 20 || email === \"\" || email.length > 50;\n\n  return (\n    <>\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\n        プロフィールを編集\n      </Button>\n      <Button\n        className={classes.logout}\n        variant=\"outlined\"\n        color=\"default\"\n        onClick={logout}\n      >\n        ログアウト\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <form className={classes.form} onSubmit={editSubmit}>\n          <DialogContent>\n            <CropImage\n              setEncodedData={setEncodedData}\n              setExt={setExt}\n              circular={true}\n            />\n            <Badge\n              overlap=\"circle\"\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n              }}\n              badgeContent={\n                <label htmlFor=\"icon-button-file\">\n                  <IconButton\n                    color=\"secondary\"\n                    aria-label=\"upload picture\"\n                    component=\"span\"\n                  >\n                    <PhotoCamera />\n                  </IconButton>\n                </label>\n              }\n            >\n              {image ? (\n                <Avatar\n                  aria-label=\"recipe\"\n                  src={image}\n                  className={classes.large}\n                />\n              ) : (\n                <Avatar\n                  aria-label=\"recipe\"\n                  src=\"/images/defaultUser.png\"\n                  className={classes.large}\n                />\n              )}\n            </Badge>\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"名前\"\n              fullWidth\n              rows={6}\n              variant=\"outlined\"\n              defaultValue={state.currentUser.name}\n              onChange={(e) => setName(e.target.value)}\n            />\n            <TextField\n              margin=\"dense\"\n              label=\"メールアドレス\"\n              fullWidth\n              rows={6}\n              variant=\"outlined\"\n              defaultValue={state.currentUser.email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              キャンセル\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={unCreatable}\n            >\n              決定\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n}\n","/front/src/components/FollowBtn.js",[],"/front/src/reducers/users.js",[],"/front/src/reducers/currentUser.js",[],"/front/src/reducers/notification.js",[],"/front/src/reducers/login.js",[],"/front/src/reducers/posts.js",[],"/front/src/reducers/loading.js",[],"/front/src/actions/index.js",[],"/front/src/components/Post.js",["159"],"import React, { useContext } from \"react\";\nimport axios from \"axios\";\nimport AppContext from \"../contexts/AppContext\";\nimport ReactPlayer from \"react-player\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TextsmsOutlinedIcon from \"@material-ui/icons/TextsmsOutlined\";\n\nimport { DELETE_POST, START_ALERT, TOKEN_KEY } from \"../actions\";\n\nimport ShowPost from \"./ShowPost\";\nimport UserImage from \"./UserImage\";\n\nimport Background from \"../images/Switzerland.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n    minWidth: 600,\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    marginBottom: 60,\n  },\n  media: {\n    height: 0,\n    paddingTop: 400, // 16:9\n  },\n  like_button: {\n    color: \"#f73d6c\",\n  },\n  bookmark_button: {\n    marginLeft: \"auto\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  menuFont: {\n    fontSize: 15,\n    fontWeight: 30,\n  },\n  fontRed: {\n    color: \"red\",\n  },\n}));\n\nconst Post = ({ post, current }) => {\n  const { state, dispatch } = useContext(AppContext);\n  const classes = useStyles();\n\n  const isLike =\n    post.likes.find((x) => x.user_id === state.currentUser.id) !== undefined;\n\n  const isLikeId = isLike\n    ? post.likes.find((x) => x.user_id === state.currentUser.id).id\n    : false;\n\n  const isBookmark =\n    post.bookmarks.find((x) => x.user_id === state.currentUser.id) !==\n    undefined;\n\n  const isBookmarkId = isBookmark\n    ? post.bookmarks.find((x) => x.user_id === state.currentUser.id).id\n    : false;\n\n  const [isExist, setIsExist] = React.useState(false);\n\n  const [like, setLike] = React.useState(isLike);\n  const [likeId, setLikeId] = React.useState(isLikeId);\n  const [likeNum, setLikeNum] = React.useState(post.likes.length);\n  const [bookmark, setBookmark] = React.useState(isBookmark);\n  const [bookmarkId, setBookmarkId] = React.useState(isBookmarkId);\n  const [comments, setComments] = React.useState([]);\n  const [commentNum, setCommentNum] = React.useState(post.comments.length);\n\n  const handleLikeClick = async (event) => {\n    event.preventDefault();\n    if (!like) {\n      setLike(!like);\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/like`,\n        { post_id: post.id },\n        {\n          headers: JSON.parse(localStorage.getItem(TOKEN_KEY)),\n        }\n      );\n      setLikeId(res.data.like.id);\n      setLikeNum(likeNum + 1);\n      console.log(res);\n    } else {\n      setLike(!like);\n      const res = await axios.delete(\n        `${process.env.REACT_APP_API_URL}/like/${likeId}`,\n        {\n          headers: JSON.parse(localStorage.getItem(TOKEN_KEY)),\n        }\n      );\n      setLikeId(false);\n      setLikeNum(likeNum - 1);\n      console.log(\"destroy\", res);\n    }\n  };\n\n  const handleBookmarkClick = async (event) => {\n    event.preventDefault();\n    if (!bookmark) {\n      setBookmark(!bookmark);\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/bookmark`,\n        { post_id: post.id },\n        {\n          headers: JSON.parse(localStorage.getItem(TOKEN_KEY)),\n        }\n      );\n      setBookmarkId(res.data.bookmark.id);\n      console.log(res);\n    } else {\n      setBookmark(!bookmark);\n      const res = await axios.delete(\n        `${process.env.REACT_APP_API_URL}/bookmark/${bookmarkId}`,\n        {\n          headers: JSON.parse(localStorage.getItem(TOKEN_KEY)),\n        }\n      );\n      setBookmarkId(false);\n      console.log(\"destroy\", res);\n    }\n  };\n\n  //post menu\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const deletePost = async (event) => {\n    event.preventDefault();\n    await axios\n      .delete(`${process.env.REACT_APP_API_URL}/post/${post.id}`, {\n        headers: JSON.parse(localStorage.getItem(TOKEN_KEY)),\n      })\n      .then((res) => {\n        dispatch({ type: DELETE_POST, data: res });\n        setIsExist(true);\n        setAnchorEl(null);\n        dispatch({\n          type: START_ALERT,\n          data: { message: \"投稿を削除しました\", severity: \"success\" },\n        });\n      })\n      .catch((err) => {\n        console.log(\"err:\", err);\n        dispatch({\n          type: START_ALERT,\n          data: { message: \"削除にに失敗しました。\", severity: \"error\" },\n        });\n      });\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  //show post\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = async (event) => {\n    event.preventDefault();\n    const res = await axios.get(\n      `${process.env.REACT_APP_API_URL}/comment/${post.id}`,\n      {\n        headers: JSON.parse(localStorage.getItem(TOKEN_KEY)),\n      }\n    );\n    setComments(res.data);\n    setAnchorEl(null);\n    setOpen(true);\n  };\n\n  const dt = new Date(post.created_at);\n  const y = dt.getFullYear();\n  const m = (\"00\" + (dt.getMonth() + 1)).slice(-2);\n  const d = (\"00\" + dt.getDate()).slice(-2);\n  const h = dt.getHours();\n  const min = dt.getMinutes();\n  const time = y + \"/\" + m + \"/\" + d + \"・\" + h + \":\" + min;\n\n  if (isExist === false) {\n    return (\n      <>\n        <Card className={classes.root}>\n          <CardHeader\n            avatar={<UserImage user={post.user} />}\n            action={\n              <IconButton aria-label=\"settings\" onClick={handleClick}>\n                <MoreVertIcon />\n              </IconButton>\n            }\n            title={\n              <Link\n                to={`/user/${post.user.id}`}\n                style={{ textDecoration: \"none\", color: \"#2b2b2b\" }}\n              >\n                {post.user.name}\n              </Link>\n            }\n            subheader={time}\n          />\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            {state.currentUser.id === post.user.id && (\n              <MenuItem\n                className={classes.menuFont + \" \" + classes.fontRed}\n                onClick={deletePost}\n              >\n                投稿を削除\n              </MenuItem>\n            )}\n            <MenuItem className={classes.menuFont} onClick={handleOpen}>\n              投稿へ移動\n            </MenuItem>\n            <MenuItem className={classes.menuFont} onClick={handleClose}>\n              キャンセル\n            </MenuItem>\n          </Menu>\n\n          {/* <ReactPlayer\n            url=\"https://hike-up-bucket.s3-ap-northeast-1.amazonaws.com/post-video/test_movie.mov\"\n            controls\n            width=\"600px\"\n          /> */}\n          {post.image ? (\n            <CardMedia\n              className={classes.media}\n              image={`https://hike-up-bucket.s3-ap-northeast-1.amazonaws.com/post-video/${post.id}${post.image}`}\n            />\n          ) : (\n            <CardMedia className={classes.media} image={Background} />\n          )}\n\n          <CardContent onClick={handleOpen}>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {post.content}\n            </Typography>\n          </CardContent>\n\n          <CardActions disableSpacing>\n            <IconButton onClick={handleLikeClick} aria-label=\"add to favorites\">\n              {like ? (\n                <FavoriteIcon className={classes.like_button} />\n              ) : (\n                <FavoriteBorderIcon />\n              )}\n            </IconButton>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {likeNum}\n            </Typography>\n            <IconButton onClick={handleOpen} aria-label=\"add to favorites\">\n              <TextsmsOutlinedIcon />\n            </IconButton>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {commentNum}\n            </Typography>\n            <IconButton\n              onClick={handleBookmarkClick}\n              className={classes.bookmark_button}\n              aria-label=\"add to bookmarks\"\n            >\n              {bookmark ? <BookmarkIcon /> : <BookmarkBorderIcon />}\n            </IconButton>\n          </CardActions>\n          <ShowPost\n            post={post}\n            setOpen={setOpen}\n            open={open}\n            setComments={setComments}\n            comments={comments}\n            setCommentNum={setCommentNum}\n            commentNum={commentNum}\n          />\n        </Card>\n      </>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default Post;\n","/front/src/components/ListUser.js",[],"/front/src/components/TweetBtn.js",[],"/front/src/components/UploadS3.js",[],"/front/src/components/AddImage.js",[],"/front/src/components/ShowPost.js",["160"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport axios from \"axios\";\nimport ReactPlayer from \"react-player\";\nimport UserImage from \"./UserImage\";\n\nimport { TOKEN_KEY } from \"../actions\";\n\nimport Background from \"../images/Switzerland.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: 390,\n    backgroundColor: theme.palette.background.paper,\n    borderBottom: \"1px solid lightgray\",\n    overflow: \"auto\",\n  },\n  inline: {\n    display: \"inline\",\n  },\n  post: {\n    maxHeight: 500,\n    minHeight: 500,\n    padding: 0,\n    paddingTop: 0,\n    borderRadius: 0,\n    width: \"100%\",\n  },\n  postImage: {\n    width: \"500px\",\n    height: \"500px\",\n    maxWidth: \"600px\",\n    display: \"inline-block\",\n    objectFit: \"cover\",\n  },\n  margin: {\n    margin: theme.spacing(1),\n    width: 250,\n  },\n  commentPost: {\n    float: \"right\",\n    marginTop: 5,\n    marginRight: 5,\n  },\n  commentText: {\n    wordWrap: \"break-word\",\n  },\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n  },\n}));\n\nconst ShowPost = ({\n  post,\n  setOpen,\n  open,\n  comments,\n  setComments,\n  setCommentNum,\n  commentNum,\n}) => {\n  const classes = useStyles();\n  const [context, setContext] = useState(\"\");\n\n  const handleClose = () => {\n    setOpen(false);\n    setContext(\"\");\n  };\n\n  const createComment = async (event) => {\n    event.preventDefault();\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/comment`,\n      { content: context, post_id: post.id },\n      {\n        headers: JSON.parse(localStorage.getItem(TOKEN_KEY)),\n      }\n    );\n    console.log(comments.concat(res.data));\n    setComments(comments.concat(res.data));\n    setContext(\"\");\n    const textareaForm = document.getElementById(\"comment\");\n    textareaForm.value = \"\";\n    setCommentNum(commentNum + 1);\n  };\n\n  const unCreatable = context === \"\" || context.length > 140;\n\n  return (\n    <>\n      <Dialog\n        open={open !== false}\n        onClose={handleClose}\n        maxWidth={\"md\"}\n        scroll={\"body\"}\n      >\n        <DialogContent\n          className={classes.post}\n          dividers={false}\n          style={{ paddingTop: \"0px\" }}\n        >\n          {/* <ReactPlayer\n            url=\"https://hike-up-bucket.s3-ap-northeast-1.amazonaws.com/post-video/test_movie.mov\"\n            controls\n            className=\"postImage\"\n          /> */}\n          <img src={Background} className=\"postImage\" alt=\"post\" />\n          <div className=\"postContent\">\n            <div className=\"postHeader\">\n              <UserImage user={post.user} />\n              <span className=\"postHeaderName\">{post.user.name}</span>\n            </div>\n            <div className={classes.root}>\n              <ListItem alignItems=\"flex-start\" key={post.id}>\n                <ListItemAvatar>\n                  <UserImage user={post.user} />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={post.user.name}\n                  secondary={post.content}\n                />\n              </ListItem>\n              {comments.map((comment) => (\n                <ListItem alignItems=\"flex-start\" key={comment.id}>\n                  <ListItemAvatar>\n                    <UserImage user={comment.user} />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={comment.user.name}\n                    secondary={comment.content}\n                    className={classes.commentText}\n                  />\n                </ListItem>\n              ))}\n            </div>\n            <form onSubmit={createComment}>\n              <InputBase\n                className={classes.margin}\n                id=\"comment\"\n                placeholder=\"コメントを追加...\"\n                inputProps={{ \"aria-label\": \"description\" }}\n                onChange={(e) => {\n                  e.preventDefault();\n                  setContext(e.target.value);\n                }}\n              />\n              <Button\n                type=\"submit\"\n                className={classes.commentPost}\n                color=\"secondary\"\n                disabled={unCreatable}\n              >\n                投稿する\n              </Button>\n            </form>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ShowPost;\n",{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":22,"column":9,"nodeType":"167","messageId":"168","endLine":22,"endColumn":25},{"ruleId":"165","severity":1,"message":"169","line":16,"column":8,"nodeType":"167","messageId":"168","endLine":16,"endColumn":16},{"ruleId":"165","severity":1,"message":"170","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":19},{"ruleId":"165","severity":1,"message":"170","line":12,"column":8,"nodeType":"167","messageId":"168","endLine":12,"endColumn":19},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'previewCanvasRef' is assigned a value but never used.","Identifier","unusedVar","'AddImage' is defined but never used.","'ReactPlayer' is defined but never used.","no-global-assign","no-unsafe-negation"]
