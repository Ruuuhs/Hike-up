version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.12.2
  aws-ecs: circleci/aws-ecs@1.3.0

jobs:
  test:
    machine:
      image: circleci/classic:edge

    steps:
      - checkout

      - run:
          name: install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.27.4/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      # - run:
      #     name: Setup dockerize
      #     command: bash .circleci/setup-dockerize.sh

      - run:
          name: docker-compose build and up
          command: |
            docker-compose build
            docker-compose up -d

      - run:
          name: Wait for db
          command: sleep 20

      # - run:
      #     name: Wait for db
      #     command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m

      - run:
          name: docker-compose ps
          command: |
            docker-compose ps
            docker-compose logs

      - run:
          name: setup database
          command: |
            docker-compose exec api  mv config/database.yml.ci config/database.yml
            docker-compose exec api rails db:create
            docker-compose exec api rails db:migrate

      - run:
          name: Run RuboCop
          command: docker-compose exec api rubocop

      - run:
          name: run tests
          command: |
            docker-compose exec api bundle exec rspec

      - run:
          name: docker-compose down
          command: docker-compose down

workflows:
  version: 2.1
  workflow:
    jobs:
      - test
      - aws-ecr/build-and-push-image:
          name: rails-build-and-push-image
          requires:
            - test
          account-url: AWS_ACCOUNT_URL
          region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          path: "./api/"
          repo: hike-up-api
          tag: "${CIRCLE_SHA1}"
          filters:
            branches:
              only: master

      - aws-ecr/build-and-push-image:
          name: react-build-and-push-image
          requires:
            - test
          account-url: AWS_ACCOUNT_URL
          region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          path: "./front/"
          repo: hike-up-front
          tag: "${CIRCLE_SHA1}"
          filters:
            branches:
              only: master

      # - aws-ecs/deploy-service-update:
      #     name: react-deploy-service-update
      #     requires:
      #       - react-build-and-push-image
      #     family: "dishare-nuxt-task" # ECSのタスク定義名
      #     cluster-name: "${ECS_ARN}" #ECSのクラスターのARN
      #     service-name: "dishare-nuxt-ecs-service" #サービス名
      #     container-image-name-updates: "container=nuxt-container,tag=${CIRCLE_SHA1}"
      #     filters:
      #       branches:
      #         only: master

      # - aws-ecs/deploy-service-update:
      #     name: rails-deploy-service-update
      #     requires:
      #       - aws-ecs/run-task
      #     family: "dishare-rails-task" # ECSのタスク定義名
      #     cluster-name: "${ECS_ARN}" #ECSのクラスターのARN
      #     service-name: "dishare-rails-ecs-service" #サービス名
      #     container-image-name-updates: "container=rails-container,tag=${CIRCLE_SHA1}"
      #     filters:
      #       branches:
      #         only: master
